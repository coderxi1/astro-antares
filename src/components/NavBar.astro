---
import { Icon } from 'astro-icon/components'
import { SITE_INFO, NAV_ITEMS } from '@/config'
import { titleColor2gcTextstyleVars } from '@/utils'
---

<nav id="nav" class="w-screen h15 fixed top-0 bg-normal shadow-md flex opacity-90">
  <div class="wfull max-w-screen-2xl m-auto flex px3">
    <div class="flex-1">
      <h1 class="text-xl font-bold">
        <a class="gc-text" style={titleColor2gcTextstyleVars('#0ed2f7,#024bc0|#024bc0,#0ed2f7')} href="/">{SITE_INFO.title}</a>
      </h1>
    </div>
    <div class="flex space-x-4">
      {NAV_ITEMS.map(navItem =>(
        <div class="group pos-relative">
          <a class="flex items-center" href={navItem.href}>
            <Icon class="text-xl mr1" name={navItem.icon}/>
            <span>{navItem.text}</span>
          </a>
          {!navItem.children?'':
          <div class="hidden group-hover:block pos-absolute h3 wfull"></div>
          <div class="hidden group-hover:block pos-absolute mt3 -mr2 pos-right-0 rounded-sm w-[max-content] shadow-[0_5px_15px_-4px_#00000080] animate-move-up-sm">
            {navItem.children.map(navItemChild=>(
              <a class="flex py3 px4 items-center bg-normal hover:bg-global" href={navItemChild.href}>
                <Icon class="text-xl mr1" name={navItemChild.icon}/>
                <span class="flex">{navItemChild.text}</span>
              </a>
            ))}
          </div>}
        </div>
      ))}
    </div>
  </div>
</nav>

<script>
  const nav = document.querySelector<HTMLElement>("#nav")!;
  let lastScrollTop = window.scrollY;
  let isThrottled = false;
  nav.style.transform = window.scrollY != 0 ? "translateY(-100%)" : "translateY(0)";
  document.addEventListener("DOMContentLoaded",()=>{
    nav.style.transitionDuration = "500ms"
    setTimeout(() => { nav.style.transform = 'translateY(0)' }, 500);
  })

  window.addEventListener("scroll", () => {
    if (isThrottled) return;
    const currentScrollTop = window.scrollY;
    const isScrollingDown = currentScrollTop > lastScrollTop;
    nav.style.transform = isScrollingDown ? "translateY(-100%)" : "translateY(0)";
    lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;
    isThrottled = true;
    setTimeout(() => { isThrottled = false }, 100);
  });
</script>

