---
import type { MarkdownHeading } from 'astro'

type HeadingWithSubheadings = MarkdownHeading & {
  subheadings?: HeadingWithSubheadings[]
}

interface Props {
  headings: MarkdownHeading[]
}

const { headings } = Astro.props

const grouppedHeadings = headings.reduce((array, heading) => {
  if (heading.depth === 1) {
    array.push({ ...heading, subheadings: [] })
  } else if (heading.depth === 2) {
    array.at(-1)?.subheadings?.push({ ...heading, subheadings: [] })
  } else if (heading.depth === 3) {
    array.at(-1)?.subheadings?.at(-1)?.subheadings?.push({ ...heading })
  }
  return array
}, [] as HeadingWithSubheadings[])
---

<ol>
{(()=>{

  const h = (heading:HeadingWithSubheadings,number:string) => (
    <li>
      <a href={`#${heading.slug}`}>{number}. {heading.text}</a>
      { heading.subheadings && <ol> { heading.subheadings.map((subheading, i) => h(subheading,`${number}.${i+1}`)) } </ol> }
    </li>
  )
  return grouppedHeadings.map((heading, i)=> h(heading,`${i+1}`))

})()}
</ol>